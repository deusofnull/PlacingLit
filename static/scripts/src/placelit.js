// Generated by CoffeeScript 1.7.1
(function() {
  var PLMap;

  PLMap = (function() {
    function PLMap() {
      this.elements = {
        modals: {
          mapmodal: $('#mapmodal'),
          querymodal: $('#querymodal')
        }
      };
      this.path = window.location.pathname;
      this.scenes = window.SCENES;
    }

    PLMap.prototype.showModal = function(element) {
      return element.modal();
    };

    PLMap.prototype.isFiltered = function() {
      if ((this.path.indexOf('collections') === -1) && (this.path.indexOf('author') === -1)) {
        return false;
      }
      return true;
    };

    PLMap.prototype.hasScenes = function() {
      return this.scenes && this.scenes.length > 0;
    };

    PLMap.prototype.selectMapView = function() {
      if (this.isFiltered() && this.hasScenes()) {
        return new PlacingLit.Views.MapFilterView(this.scenes);
      }
      return new PlacingLit.Views.MapCanvasView;
    };

    PLMap.prototype.displayEmptyResultsError = function() {
      var alertMessage, author, author_path;
      author_path = '/map/filter/author/';
      author = decodeURIComponent(this.path.replace(author_path, ''));
      alertMessage = 'Whoa! No places found for ' + author + '. ';
      alertMessage += 'But that\'s ok!. Be the first to map this author. ';
      alertMessage += 'Click the map to add a book and author.';
      return alert(alertMessage);
    };

    return PLMap;

  })();

  $(function() {
    var plmap, view;
    plmap = new PLMap();
    view = plmap.selectMapView();
    if (location.search === '?modal=1') {
      plmap.showModal(plmap.elements.modals.mapmodal);
    } else if (plmap.isFiltered()) {
      if (plmap.scenes.length > 0) {
        plmap.showModal(plmap.elements.modals.querymodal);
      } else {
        plmap.displayEmptyResultsError();
      }
    }
    if (!Modernizr.input.placeholder) {
      view.handleInputAttributes();
    }
    return view.showInfowindowFormAtLocation();
  });

}).call(this);
